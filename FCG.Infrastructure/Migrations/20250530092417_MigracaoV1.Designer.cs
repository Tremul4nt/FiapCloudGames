// <auto-generated />
using System;
using FCG.Infrastructure.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FCG.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250530092417_MigracaoV1")]
    partial class MigracaoV1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FCG.Core.Entity.Biblioteca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DATA_CRIACAO");

                    b.Property<int>("JogoId")
                        .HasColumnType("INT")
                        .HasColumnName("ID_JOGO");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INT")
                        .HasColumnName("ID_USUARIO");

                    b.HasKey("Id");

                    b.HasIndex("JogoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("BIBLIOTECA", (string)null);
                });

            modelBuilder.Entity("FCG.Core.Entity.Jogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("CATEGORIA");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DATA_CRIACAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("NOME");

                    b.Property<decimal>("ValorCompra")
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VALOR");

                    b.HasKey("Id");

                    b.ToTable("JOGO", (string)null);
                });

            modelBuilder.Entity("FCG.Core.Entity.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Admin")
                        .HasColumnType("INT")
                        .HasColumnName("ADMIN");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DATA_CRIACAO");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("NOME");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)")
                        .HasColumnName("SENHA");

                    b.HasKey("Id");

                    b.ToTable("USUARIO", (string)null);
                });

            modelBuilder.Entity("FCG.Core.Entity.Biblioteca", b =>
                {
                    b.HasOne("FCG.Core.Entity.Jogo", "Jogo")
                        .WithMany("Bibliotecas")
                        .HasForeignKey("JogoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FCG.Core.Entity.Usuario", "Usuario")
                        .WithMany("Bibliotecas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jogo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FCG.Core.Entity.Jogo", b =>
                {
                    b.Navigation("Bibliotecas");
                });

            modelBuilder.Entity("FCG.Core.Entity.Usuario", b =>
                {
                    b.Navigation("Bibliotecas");
                });
#pragma warning restore 612, 618
        }
    }
}
